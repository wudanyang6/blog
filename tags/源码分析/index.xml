<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>源码分析 on 少侠</title><link>https://wudanyang.top/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><description>Recent content in 源码分析 on 少侠</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 13 Apr 2021 21:07:19 +0800</lastBuildDate><atom:link href="https://wudanyang.top/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml"/><item><title>Nginx Master 进程主流程</title><link>https://wudanyang.top/post/nginx/nginx-master/</link><pubDate>Tue, 13 Apr 2021 21:07:19 +0800</pubDate><guid>https://wudanyang.top/post/nginx/nginx-master/</guid><description>nginx master 进程主流程 之前有说到 nginx 进程模型-整体架构，下面来看一下 nginx master 进程的主要工作 nginx 的入口 main 函数在 nginx.c 文件中 函数原型为： 1 2 int ngx_cdecl main(int argc, char *const *argv) 在这个函数中，master 做了一系列的初始化操作 最终在下面这个地方进入了主流程中： 1 2 3 4 5 6 7 8 //... if (ngx_process == NGX_PROCESS_SINGLE) { ngx_single_process_cycle(cycle); } else { ngx_master_process_cycle(cycle); } //... 因为我们主要看 master-worker 这种进程模型，所以进入 ngx_master_process_cycle 设置信</description></item></channel></rss>