<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on 吴丹阳</title>
    <link>https://wudanyang.top/tags/nginx/</link>
    <description>Recent content in nginx on 吴丹阳</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 23 Apr 2021 14:58:47 +0800</lastBuildDate>
    
	<atom:link href="https://wudanyang.top/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何调试nginx的rewrite规则?</title>
      <link>https://wudanyang.top/post/nginx/how-debug-nginx-rewrite/</link>
      <pubDate>Fri, 23 Apr 2021 14:58:47 +0800</pubDate>
      
      <guid>https://wudanyang.top/post/nginx/how-debug-nginx-rewrite/</guid>
      <description>如何调试nginx的rewrite规则？ 设置 rewrite_log on; 并且将error_log 的报错等级改成 notice; 官网对 rewrite_log 的解释： 1 2 3 4 5 Syntax: rewrite_log on | off; Default: rewrite_log off; Context: http, server, location, if</description>
    </item>
    
    <item>
      <title>Nginx Master 进程主流程</title>
      <link>https://wudanyang.top/post/nginx/nginx-master/</link>
      <pubDate>Tue, 13 Apr 2021 21:07:19 +0800</pubDate>
      
      <guid>https://wudanyang.top/post/nginx/nginx-master/</guid>
      <description>nginx master 进程主流程 之前有说到 nginx 进程模型-整体架构，下面来看一下 nginx master 进程的主要工作 nginx 的入口 main 函数在 nginx.c 文件中 函数原型为： 1 2 int ngx_cdecl main(int argc, char *const *argv) 在这个函数</description>
    </item>
    
    <item>
      <title>Nginx 进程模型-整体架构</title>
      <link>https://wudanyang.top/post/nginx/nginx-process/</link>
      <pubDate>Sat, 10 Apr 2021 14:26:32 +0800</pubDate>
      
      <guid>https://wudanyang.top/post/nginx/nginx-process/</guid>
      <description>从网上找了一个非常好的图片，从图中可以看到很多东西 Nginx 会生成多个进程 worker 使用了io 多路复用的事件驱动框架 worker 内部有很多模块 worker 处理磁盘I/O 时，使用</description>
    </item>
    
  </channel>
</rss>