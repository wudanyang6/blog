<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nginx on 少侠</title><link>https://wudanyang.top/tags/nginx/</link><description>Recent content in nginx on 少侠</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 18 Mar 2022 23:32:05 +0800</lastBuildDate><atom:link href="https://wudanyang.top/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>vscode debug nginx 源码</title><link>https://wudanyang.top/post/nginx/vscode-nginx-debug/</link><pubDate>Fri, 18 Mar 2022 23:32:05 +0800</pubDate><guid>https://wudanyang.top/post/nginx/vscode-nginx-debug/</guid><description>1 通过源码安装 nginx 1.1 下载源码 1 git clone https://github.com/nginx/nginx 1.2 编译并安装 nginx 修改nginx源码中的配置文件：auto/cc/conf 将第 12 行修改一下 ngx_compile_opt=&amp;quot;-c&amp;quot; 改成： ngx_compile_opt=&amp;quot;-c -g&amp;quot; -g 选项会让编译器产生调试信息 执行配置并安装： 1 2 cd nginx auto/configure 默认被安装在 /usr/local/nginx ，可以通过 --prefix 选项修改 继续执行 make &amp;amp;&amp;amp; make install 到这里，nginx 就安装完毕了 1.3 启动 nginx 1 /usr/local/nginx 默认监听本机 80 端口 完成</description></item><item><title>如何调试nginx的rewrite规则?</title><link>https://wudanyang.top/post/nginx/how-debug-nginx-rewrite/</link><pubDate>Fri, 23 Apr 2021 14:58:47 +0800</pubDate><guid>https://wudanyang.top/post/nginx/how-debug-nginx-rewrite/</guid><description>如何调试nginx的rewrite规则？ 设置 rewrite_log on; 并且将error_log 的报错等级改成 notice; 官网对 rewrite_log 的解释： 1 2 3 4 5 Syntax: rewrite_log on | off; Default: rewrite_log off; Context: http, server, location, if Enables or disables logging of ngx_http_rewrite_module module directives processing results into the error_log at the notice level. 可以看到，这个指令只能在 http server location if 配置指令中使用，日志等级是 notice 写入到 error_log 配置的文件中。 示例 url： /q?someparams 1 2 3 4 5 6 2021/04/22 18:21:28 [notice] 18131#0: *102982 &amp;#34;^/+m/question(.*)?qid=\d+(.*)?$&amp;#34; does not match</description></item><item><title>Nginx Master 进程主流程</title><link>https://wudanyang.top/post/nginx/nginx-master/</link><pubDate>Tue, 13 Apr 2021 21:07:19 +0800</pubDate><guid>https://wudanyang.top/post/nginx/nginx-master/</guid><description>nginx master 进程主流程 之前有说到 nginx 进程模型-整体架构，下面来看一下 nginx master 进程的主要工作 nginx 的入口 main 函数在 nginx.c 文件中 函数原型为： 1 2 int ngx_cdecl main(int argc, char *const *argv) 在这个函数中，master 做了一系列的初始化操作 最终在下面这个地方进入了主流程中： 1 2 3 4 5 6 7 8 //... if (ngx_process == NGX_PROCESS_SINGLE) { ngx_single_process_cycle(cycle); } else { ngx_master_process_cycle(cycle); } //... 因为我们主要看 master-worker 这种进程模型，所以进入 ngx_master_process_cycle 设置信</description></item><item><title>Nginx 进程模型-整体架构</title><link>https://wudanyang.top/post/nginx/nginx-process/</link><pubDate>Sat, 10 Apr 2021 14:26:32 +0800</pubDate><guid>https://wudanyang.top/post/nginx/nginx-process/</guid><description>从网上找了一个非常好的图片，从图中可以看到很多东西 Nginx 会生成多个进程 worker 使用了io 多路复用的事件驱动框架 worker 内部有很多模块 worker 处理磁盘I/O 时，使用了标准I/O ，sendfile ，AIO ，mmap 等I/O 技术 Cache loader 和Cache manager 操作 proxy cache 后端支持多种基于tcp 的网络协议</description></item></channel></rss>