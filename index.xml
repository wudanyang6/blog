<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>吴丹阳</title><link>https://wudanyang.top/</link><description>Recent content on 吴丹阳</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 28 Apr 2021 10:18:04 +0800</lastBuildDate><atom:link href="https://wudanyang.top/index.xml" rel="self" type="application/rss+xml"/><item><title>树莓派 ubuntu 配置网络</title><link>https://wudanyang.top/post/raspberry/ubuntu-network/</link><pubDate>Wed, 28 Apr 2021 10:18:04 +0800</pubDate><guid>https://wudanyang.top/post/raspberry/ubuntu-network/</guid><description>树莓派 ubuntu 配置网络 树莓派现在可以安装很多操作系统，其中 ubuntu 也提供了树莓派版本，因为对 ubuntu 更加熟悉，所以就往 SD 卡中烧录了 ubuntu 的 20.04 lts 64位 版本。这里有可</description></item><item><title>如何调试nginx的rewrite规则?</title><link>https://wudanyang.top/post/nginx/how-debug-nginx-rewrite/</link><pubDate>Fri, 23 Apr 2021 14:58:47 +0800</pubDate><guid>https://wudanyang.top/post/nginx/how-debug-nginx-rewrite/</guid><description>如何调试nginx的rewrite规则？ 设置 rewrite_log on; 并且将error_log 的报错等级改成 notice; 官网对 rewrite_log 的解释： 1 2 3 4 5 Syntax: rewrite_log on | off; Default: rewrite_log off; Context: http, server, location, if</description></item><item><title>Nginx Master 进程主流程</title><link>https://wudanyang.top/post/nginx/nginx-master/</link><pubDate>Tue, 13 Apr 2021 21:07:19 +0800</pubDate><guid>https://wudanyang.top/post/nginx/nginx-master/</guid><description>nginx master 进程主流程 之前有说到 nginx 进程模型-整体架构，下面来看一下 nginx master 进程的主要工作 nginx 的入口 main 函数在 nginx.c 文件中 函数原型为： 1 2 int ngx_cdecl main(int argc, char *const *argv) 在这个函数</description></item><item><title>文件描述符</title><link>https://wudanyang.top/post/os/fd/</link><pubDate>Tue, 13 Apr 2021 11:25:18 +0800</pubDate><guid>https://wudanyang.top/post/os/fd/</guid><description>什么是文件描述符 对于内核而言，所有打开的文件都通过 文件描述符（file descriptor）引用。通常也写作 fd。 文件描述符是一个非负整数。</description></item><item><title>如何追查线上问题</title><link>https://wudanyang.top/post/exp/locate-online-error/</link><pubDate>Mon, 12 Apr 2021 12:26:32 +0800</pubDate><guid>https://wudanyang.top/post/exp/locate-online-error/</guid><description>原则 止损优先 不能先追查问题根源， 首先应该止损，不让问题进一步扩大，代码回滚、服务降级等都可以起到止损的效果。 对于止损有一个比较好的实践，新业</description></item><item><title>Nginx 进程模型-整体架构</title><link>https://wudanyang.top/post/nginx/nginx-process/</link><pubDate>Sat, 10 Apr 2021 14:26:32 +0800</pubDate><guid>https://wudanyang.top/post/nginx/nginx-process/</guid><description>从网上找了一个非常好的图片，从图中可以看到很多东西 Nginx 会生成多个进程 worker 使用了io 多路复用的事件驱动框架 worker 内部有很多模块 worker 处理磁盘I/O 时，使用</description></item><item><title>Hello World</title><link>https://wudanyang.top/post/hello-world/</link><pubDate>Fri, 09 Apr 2021 09:08:27 +0000</pubDate><guid>https://wudanyang.top/post/hello-world/</guid><description>回到使用 github pages ，站点基本可用了。 原来的博客依然保留，但不做更新了。 1 include &amp;lt;stdio.h&amp;gt;</description></item></channel></rss>